<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
      <title>Posts on Maikel&#39;s Tech Blog </title>
      <generator uri="https://gohugo.io">Hugo</generator>
    <link>http://maikelh.github.io/post/</link>
    <language>en-us</language>
    
    
    <updated>Mon, 22 Aug 2016 16:34:28 CEST</updated>
    
    <item>
      <title>Disabling GKE load balancer in Kubernetes</title>
      <link>http://maikelh.github.io/post/disabling-gke-loadbalancer-in-kubernetes/</link>
      <pubDate>Mon, 22 Aug 2016 16:34:28 CEST</pubDate>
      
      <guid>http://maikelh.github.io/post/disabling-gke-loadbalancer-in-kubernetes/</guid>
      <description>

&lt;p&gt;For a project we run a kubernetes cluster using the &lt;a href=&#34;https://cloud.google.com/container-engine/&#34;&gt;Google Container Engine (GKE)&lt;/a&gt;. GKE provides a lot functionality out of the box including automatic configuration of load balancer using the kubernetes ingress resources. When you configure an ingress resource in kubernetes it will automatically create an GLCB load balancer with an external IP adress and route traffice into the cluster according the rules you set in the ingress resource.&lt;/p&gt;

&lt;p&gt;Now the problem in our system is that we use traefik as a load balancer inside our cluster to manage incoming HTTP traffic and don&amp;rsquo;t want to use the built in GCE load balancer. Traefik is then configured using the ingress resources. Doing it like this will lead to two load balancers in the system, the Google load balancer and the traefik one. To disable this behaviour there are 2 solutions.&lt;/p&gt;

&lt;h3 id=&#34;solution-1-annotate-ingress-resources&#34;&gt;Solution 1: Annotate ingress resources&lt;/h3&gt;

&lt;p&gt;It is possible to add the &lt;code&gt;kubernetes.io/ingress.class&lt;/code&gt; annotation to specify which class load balancers should apply the rule. See the example below.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: test-deployment
  annotations:
    kubernetes.io/ingress.class: &amp;quot;nginx&amp;quot;
spec:
  rules:
  - host: www.test.com
    http:
      paths:
      - backend:
          serviceName: wwww-service
          servicePort: 80
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The above example will only create load balancer if the nginx addon is enabled. In our case this solution did not work and had to resort to solution 2 described below.&lt;/p&gt;

&lt;h3 id=&#34;solution-2-disable-httploadbalancer-addon-in-gke&#34;&gt;Solution 2: Disable Httploadbalancer addon in GKE&lt;/h3&gt;

&lt;p&gt;The second solution is to disable the load balancer addon in kubernetes. You can update a running cluster by using the following command. Beware that this will restart the master server.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;gcloud container clusters update NAME HttpLoadBalancing=ENABLED|DISABLED
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;When creating the cluster it also possible to immediately disable the HttpLoadBalancing by using the &lt;code&gt;--disable-addons&lt;/code&gt; flag as follows:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;gcloud container clusters create NAME --disable-addons HttpLoadBalancing
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;references&#34;&gt;References&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/kubernetes/kubernetes/tree/master/cluster/addons/cluster-loadbalancing/glbc&#34;&gt;More information about GLBC loadbalancer (GCE)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://cloud.google.com/sdk/gcloud/reference/container/clusters/create&#34;&gt;Gcloud API for creating clusters&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
  </channel>
</rss>
